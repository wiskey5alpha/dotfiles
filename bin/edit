#!/bin/sh
# -*- origami-fold-style : triple-braces -*-

## {{{ emacs client usage
#
# Usage: emacsclient [OPTIONS] FILE...
# Tell the Emacs server to visit the specified files.
# Every FILE can be either just a FILENAME or [+LINE[:COLUMN]] FILENAME.
#
# The following OPTIONS are accepted:
# -V, --version		Just print version info and return
# -H, --help    	Print this usage information message
# -nw, -t, --tty 	Open a new Emacs frame on the current terminal
# -c, --create-frame    Create a new frame instead of trying to
# 			use the current Emacs frame
# -F ALIST, --frame-parameters=ALIST
# 			Set the parameters of a new frame
# -e, --eval    		Evaluate the FILE arguments as ELisp expressions
# -n, --no-wait		Don't wait for the server to return
# -q, --quiet		Don't display messages on success
# -d DISPLAY, --display=DISPLAY
# 			Visit the file in the given display
# --parent-id=ID          Open in parent window ID, via XEmbed
# -s SOCKET, --socket-name=SOCKET
# 			Set filename of the UNIX socket for communication
# -f SERVER, --server-file=SERVER
# 			Set filename of the TCP authentication file
# -a EDITOR, --alternate-editor=EDITOR
# 			Editor to fallback to if the server is not running
# 			If EDITOR is the empty string, start Emacs in daemon
# 			mode and try connecting again
#
# Report bugs with M-x report-emacs-bug.
## }}}

#_emacsfun()
#{
#    # get list of emacs frames.
#    frameslist=`emacsclient --alternate-editor '' --eval '(frame-list)' 2>/dev/null | egrep -o '(frame)+'`
#
#    if [ "$(echo "$frameslist" | sed -n '$=')" -ge 2 ] ;then
#	# prevent creating another X frame if there is at least one present.
#	emacsclient --alternate-editor "" "$*"
#    else
#	# Create one if there is no X window yet.
#	emacsclient --alternate-editor "" --create-frame "$*"
#    fi
#}


# # adopted from https://github.com/davidshepherd7/emacs-read-stdin/blob/master/emacs-read-stdin.sh
# # If the second argument is - then write stdin to a tempfile and open the
# # tempfile.
# if [ "$#" -ge "2" -a "$2" = "-" ]
# then
#     tempfile="$(mktemp emacs-stdin-$USER.XXXXXXX --tmpdir)"
#     cat - > "$tempfile"
#    _emacsfun --no-wait $tempfile
# else
#     _emacsfun "$*"
#    fi


EMACSCLIENT="/usr/bin/emacsclient"

exec $EMACSCLIENT -c -a "" $*
